spring:
  application:
    name: binapi-service
  # DataSource Config
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/binapi?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: 321998
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER # 用于将请求路径与已注册映射匹配的策略选择
  session:
    # timeout: 86400 # session 失效时间，单位s, 86400s = 1day; 默认是1800秒; 先通过代码注解配置
    store-type: redis # 将用户状态信息 session 存入redis当中
  # redis 配置
  redis:
    # 本地的redis并没有设置远程连接功能，所以不能使用连接主机ip地址。原因是这里没有设置密码，要不然知道了本地的ip就谁都可以连接操作本机的redis服务了，这样不好。但这里改变使用了服务器的redis服务了。
    host: 127.0.0.1
    port: 6379
    password: 321998
    # springboot操作redis服务的客户端类型有两种：lettuce和jedis。默认操作redis的客户端类型是lettuce，两者最大的区别是jedis存在高并发线程安全问题而lettuce没有。
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 1
        max-wait: 1000ms
        time-between-eviction-runs: 10s
  main:
    allow-circular-references: true # 允许循环依赖注入，默认为 false
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
      config:
        server-addr: 127.0.0.1:8848
        file-extension: yml
        shared-configs:
          - application-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension}
        import-check:
          enabled: false #关闭导入文件检查，注意微服务版本的区别
  #config:
    #import: optional:application.yml
server:
  port: 9999
  servlet:
    context-path: /service
mybatis-plus:
  configuration:
    # 这里因为使用的是 binapi 数据库，所以必须映射下划线，如果是 springboot_init 数据库则不需要
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
      table-prefix: tb_
      id-type: assign_id
# 导入 starter 包自定义配置
alias:
  openapi:
    client:
      secret-key: Carl
      app-id: 123456
      access-key: abcd

dubbo:
  application:
    name: binapi-service-provider-dubbo
  protocol:
    name: dubbo
    port: 20880
  registry:
    id: nacos-service-registry
    protocol: nacos
    address: nacos://127.0.0.1:8848
